This will keep all the notes while I am learning coding with Flask

# macro
	1. in the same file(few macro involved)
		1.1. create macro
			{% macro input(name,value,type,placeholder) %}
				input(name="{{ name }}",value="{{ vlaue }}",type="{{ type }}",placeholder="{{placeholder}}")
			{% endmacro %}
		1.2. using macro
			{{input(type="text",placeholder="username")}}
	2. store macros in a html file(many macros involved)
		2.1. create macros
		2.2. import one macro from a html file
			{% from 'macro.html' import input as inp %}
		2.3. import many macros from a html file
			{% from 'macro.html' import input, render_content %}

# templates inherited
	1. including file(not support editting of block content, including all the content from the parent file)
		{% include 'base.html' %}
	2. extends file(inherit from parent file and support editting block content)
		{% extends 'base.html' %}


# block
	1. define block
		{% block block_name %}
			content(optional)
		{% endblock %}
	2. using block(content must be put in the relative block defined in the parent file, or content will not rendered)
		{% block block_name %}
			custom content here
		{% endblock %}
			**message outside this block will not rendered!**
# get relative path using url_for() function
	1.  using css/js/images(stored in "static" folder)
		{{ url_for('static',filename='css/bootstrap.css') }}
	2. get relative path of view function
		{{ url_for('login') }} # return /login/
		

# Retrieving data from dict/list/object
	1. {{ mydict['key']}}, {{ mylist['index'] }}, {{ myobj.myfunc() }}
